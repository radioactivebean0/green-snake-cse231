(fun (emptybst)
    (vec false false false)
)

(fun (insertbst root value)
    (if (isbool root) 
        (vec value false false)
        (if (isbool (vec-get root 0))
            (vec value false false)
            (if (= value (vec-get root 0))
                root
                (if (< value (vec-get root 0))
                    (vec (vec-get root 0) (insertbst (vec-get root 1) value) (vec-get root 2))
                    (vec (vec-get root 0) (vec-get root 1) (insertbst (vec-get root 2) value))
                )
            )
        )
    )
)

(fun (searchbst root value)
    (if (isbool root)
        false
        (if (isbool (vec-get root 0))
            false
            (if (= value (vec-get root 0))
                true
                (if (< value (vec-get root 0))
                    (searchbst (vec-get root 1) value)
                    (searchbst (vec-get root 2) value)
                )
            )
        )
    )
)

(fun (ex1)
    (emptybst)
)

(fun (ex2)
    (insertbst (insertbst (insertbst (insertbst (emptybst) 1) 2) 3) 4)
)
(fun (ex3)
    (insertbst (insertbst (insertbst (insertbst (insertbst (insertbst (insertbst (emptybst) 4) 2) 6) 1) 3) 7) 5)
)

(fun (ex4)
    (let ((x 0))
        (block
            (set! x (insertbst (insertbst (insertbst (insertbst (insertbst (emptybst) 4) 3) 1) 2) 6))
            (print x)
            (print (searchbst x 7))
            (print (searchbst x 4))
        )
    )
)

(fun (ex5)
    (let ((x 0))
        (block
            (set! x (insertbst (print 
                        (insertbst (print 
                            (insertbst (print 
                                (insertbst (print
                                    (insertbst (print (emptybst)) 4)) 3)) 1)) 2)) 6))
        )
    )
)

(fun (ex6)
    (let ((x 0) (y 0))
        (block
            (set! x (insertbst (insertbst (insertbst (emptybst) 6) 5) 7))
            (set! y (insertbst (insertbst (insertbst (emptybst) 10) 9) 11))
            (let ((z (vec 8 x y)))
                (block 
                    (print z)
                    (insertbst z 4)
                )
            )
        )
    )
)

(if (= input 1)
    (ex1)
    (if (= input 2)
        (ex2)
        (if (= input 3)
            (ex3)
            (if (= input 4)
                (ex4)
                (if (= input 5)
                    (ex5)
                    (ex6)
                )
            )
        )
    )
)