---- profile_add stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5437678

Instructions in generated .s: 29
Instructions by type in your generated assembly before linking is:
  11 mov
   5 push
   5 pop
   4 call
   1 sub
   1 ret
   1 jo
   1 add


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_add1 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5439654

Instructions in generated .s: 29
Instructions by type in your generated assembly before linking is:
  11 mov
   5 push
   5 pop
   4 call
   1 sub
   1 ret
   1 jo
   1 add


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_add_lets stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5384125

Instructions in generated .s: 31
Instructions by type in your generated assembly before linking is:
  11 mov
   5 push
   5 pop
   4 call
   3 jo
   1 sub
   1 ret
   1 add


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_basic_input_1 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5385625

Instructions in generated .s: 28
Instructions by type in your generated assembly before linking is:
  11 mov
   5 push
   5 pop
   4 call
   1 sub
   1 ret
   1 add


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_basic_input_2 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5390165

Instructions in generated .s: 28
Instructions by type in your generated assembly before linking is:
  11 mov
   5 push
   5 pop
   4 call
   1 sub
   1 ret
   1 add


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_binding stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5478976

Instructions in generated .s: 28
Instructions by type in your generated assembly before linking is:
  11 mov
   5 push
   5 pop
   4 call
   1 sub
   1 ret
   1 add


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_boa_points1 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5468214

Instructions in generated .s: 443
Instructions by type in your generated assembly before linking is:
 203 mov
  53 push
  32 call
  28 add
  21 cmp
  15 test
  11 sub
  11 jne
  11 je
  10 00
   9 lea
   9 jmp
   7 pop
   7 jle
   4 sar
   4 jl
   3 ret
   3 cmove
   2 jo


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_boa_points2 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5454683

Instructions in generated .s: 443
Instructions by type in your generated assembly before linking is:
 203 mov
  53 push
  32 call
  28 add
  21 cmp
  15 test
  11 sub
  11 jne
  11 je
  10 00
   9 lea
   9 jmp
   7 pop
   7 jle
   4 sar
   4 jl
   3 ret
   3 cmove
   2 jo


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_boa_points3 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5678231

Instructions in generated .s: 443
Instructions by type in your generated assembly before linking is:
 203 mov
  53 push
  32 call
  28 add
  21 cmp
  15 test
  11 sub
  11 jne
  11 je
  10 00
   9 lea
   9 jmp
   7 pop
   7 jle
   4 sar
   4 jl
   3 ret
   3 cmove
   2 jo


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_boa_points4 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5585002

Instructions in generated .s: 443
Instructions by type in your generated assembly before linking is:
 203 mov
  53 push
  32 call
  28 add
  21 cmp
  15 test
  11 sub
  11 jne
  11 je
  10 00
   9 lea
   9 jmp
   7 pop
   7 jle
   4 sar
   4 jl
   3 ret
   3 cmove
   2 jo


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_bool_eq stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5467957

Instructions in generated .s: 28
Instructions by type in your generated assembly before linking is:
  11 mov
   5 push
   5 pop
   4 call
   1 sub
   1 ret
   1 add


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_bst_1 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5498378

Instructions in generated .s: 1102
Instructions by type in your generated assembly before linking is:
 524 mov
  82 push
  74 cmp
  66 call
  57 add
  43 je
  41 test
  39 jmp
  38 sub
  25 jne
  20 jle
  18 lea
  14 sar
  14 pop
  14 jl
  11 cmove
  10 ret
   4 and
   2 xor
   2 or
   2 cmovl
   2 00


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_bst_2 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5526545

Instructions in generated .s: 1102
Instructions by type in your generated assembly before linking is:
 524 mov
  82 push
  74 cmp
  66 call
  57 add
  43 je
  41 test
  39 jmp
  38 sub
  25 jne
  20 jle
  18 lea
  14 sar
  14 pop
  14 jl
  11 cmove
  10 ret
   4 and
   2 xor
   2 or
   2 cmovl
   2 00


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_bst_3 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5628733

Instructions in generated .s: 1102
Instructions by type in your generated assembly before linking is:
 524 mov
  82 push
  74 cmp
  66 call
  57 add
  43 je
  41 test
  39 jmp
  38 sub
  25 jne
  20 jle
  18 lea
  14 sar
  14 pop
  14 jl
  11 cmove
  10 ret
   4 and
   2 xor
   2 or
   2 cmovl
   2 00


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_bst_4 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5731604

Instructions in generated .s: 1102
Instructions by type in your generated assembly before linking is:
 524 mov
  82 push
  74 cmp
  66 call
  57 add
  43 je
  41 test
  39 jmp
  38 sub
  25 jne
  20 jle
  18 lea
  14 sar
  14 pop
  14 jl
  11 cmove
  10 ret
   4 and
   2 xor
   2 or
   2 cmovl
   2 00


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_bst_5 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5791653

Instructions in generated .s: 1102
Instructions by type in your generated assembly before linking is:
 524 mov
  82 push
  74 cmp
  66 call
  57 add
  43 je
  41 test
  39 jmp
  38 sub
  25 jne
  20 jle
  18 lea
  14 sar
  14 pop
  14 jl
  11 cmove
  10 ret
   4 and
   2 xor
   2 or
   2 cmovl
   2 00


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_bst_6 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5805720

Instructions in generated .s: 1102
Instructions by type in your generated assembly before linking is:
 524 mov
  82 push
  74 cmp
  66 call
  57 add
  43 je
  41 test
  39 jmp
  38 sub
  25 jne
  20 jle
  18 lea
  14 sar
  14 pop
  14 jl
  11 cmove
  10 ret
   4 and
   2 xor
   2 or
   2 cmovl
   2 00


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_chain_bindings stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5422148

Instructions in generated .s: 32
Instructions by type in your generated assembly before linking is:
  11 mov
   5 push
   5 pop
   4 jo
   4 call
   1 sub
   1 ret
   1 add


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_even_odd_1 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5374772

Instructions in generated .s: 155
Instructions by type in your generated assembly before linking is:
  71 mov
  15 push
  10 call
   9 jmp
   7 pop
   7 add
   6 test
   6 sub
   6 jne
   6 cmp
   3 ret
   3 jo
   3 je
   2 cmove
   1 cmovl


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_even_odd_2 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5369530

Instructions in generated .s: 155
Instructions by type in your generated assembly before linking is:
  71 mov
  15 push
  10 call
   9 jmp
   7 pop
   7 add
   6 test
   6 sub
   6 jne
   6 cmp
   3 ret
   3 jo
   3 je
   2 cmove
   1 cmovl


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_fac stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5371300

Instructions in generated .s: 84
Instructions by type in your generated assembly before linking is:
  44 mov
   5 test
   5 push
   5 pop
   5 jne
   4 jmp
   4 call
   2 jo
   2 cmp
   2 add
   1 sub
   1 sar
   1 ret
   1 je
   1 imul
   1 cmovg


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_fact stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5531605

Instructions in generated .s: 98
Instructions by type in your generated assembly before linking is:
  48 mov
   8 push
   6 pop
   5 test
   5 jne
   5 jmp
   5 call
   4 add
   2 sub
   2 ret
   2 jo
   2 cmp
   1 sar
   1 je
   1 imul
   1 cmovg


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_false_val stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5484634

Instructions in generated .s: 28
Instructions by type in your generated assembly before linking is:
  11 mov
   5 push
   5 pop
   4 call
   1 sub
   1 ret
   1 add


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_func_args_0 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5416210

Instructions in generated .s: 578
Instructions by type in your generated assembly before linking is:
 274 mov
  51 test
  51 jne
  45 push
  35 add
  24 jo
  21 jmp
  15 sub
  14 cmp
  13 pop
  12 call
   9 ret
   7 je
   7 cmove


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_bigloop stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 2711060847

Instructions in generated .s: 63
Instructions by type in your generated assembly before linking is:
  32 mov
   5 push
   5 pop
   4 jmp
   4 call
   2 test
   2 sub
   2 jne
   2 cmp
   1 ret
   1 jo
   1 je
   1 cmove
   1 add


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.40
2 0.40
3 0.40
4 0.41
5 0.41


---- profile_func_args_1 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5372076

Instructions in generated .s: 578
Instructions by type in your generated assembly before linking is:
 274 mov
  51 test
  51 jne
  45 push
  35 add
  24 jo
  21 jmp
  15 sub
  14 cmp
  13 pop
  12 call
   9 ret
   7 je
   7 cmove


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_func_args_2 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5346954

Instructions in generated .s: 578
Instructions by type in your generated assembly before linking is:
 274 mov
  51 test
  51 jne
  45 push
  35 add
  24 jo
  21 jmp
  15 sub
  14 cmp
  13 pop
  12 call
   9 ret
   7 je
   7 cmove


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_func_args_3 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5370583

Instructions in generated .s: 578
Instructions by type in your generated assembly before linking is:
 274 mov
  51 test
  51 jne
  45 push
  35 add
  24 jo
  21 jmp
  15 sub
  14 cmp
  13 pop
  12 call
   9 ret
   7 je
   7 cmove


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_func_args_4 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5509834

Instructions in generated .s: 578
Instructions by type in your generated assembly before linking is:
 274 mov
  51 test
  51 jne
  45 push
  35 add
  24 jo
  21 jmp
  15 sub
  14 cmp
  13 pop
  12 call
   9 ret
   7 je
   7 cmove


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_func_args_5 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5434072

Instructions in generated .s: 578
Instructions by type in your generated assembly before linking is:
 274 mov
  51 test
  51 jne
  45 push
  35 add
  24 jo
  21 jmp
  15 sub
  14 cmp
  13 pop
  12 call
   9 ret
   7 je
   7 cmove


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_func_args_6 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5396448

Instructions in generated .s: 578
Instructions by type in your generated assembly before linking is:
 274 mov
  51 test
  51 jne
  45 push
  35 add
  24 jo
  21 jmp
  15 sub
  14 cmp
  13 pop
  12 call
   9 ret
   7 je
   7 cmove


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_func_args_7 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5425662

Instructions in generated .s: 578
Instructions by type in your generated assembly before linking is:
 274 mov
  51 test
  51 jne
  45 push
  35 add
  24 jo
  21 jmp
  15 sub
  14 cmp
  13 pop
  12 call
   9 ret
   7 je
   7 cmove


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_geq_1 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5400476

Instructions in generated .s: 60
Instructions by type in your generated assembly before linking is:
  25 mov
   8 push
   6 pop
   5 call
   3 jmp
   3 add
   2 sub
   2 ret
   2 cmp
   1 test
   1 jne
   1 je
   1 cmovge


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_geq_2 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5376099

Instructions in generated .s: 60
Instructions by type in your generated assembly before linking is:
  25 mov
   8 push
   6 pop
   5 call
   3 jmp
   3 add
   2 sub
   2 ret
   2 cmp
   1 test
   1 jne
   1 je
   1 cmovge


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_heap_1 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5377098

Instructions in generated .s: 66
Instructions by type in your generated assembly before linking is:
  30 mov
   5 push
   5 pop
   5 call
   4 cmp
   3 sub
   3 lea
   2 test
   2 jle
   2 je
   1 sar
   1 ret
   1 jne
   1 jl
   1 add


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_heap_2 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5562354

Instructions in generated .s: 209
Instructions by type in your generated assembly before linking is:
  99 mov
  17 cmp
  10 sub
  10 push
  10 call
   9 test
   9 lea
   9 je
   7 jle
   6 pop
   5 jne
   4 sar
   4 jl
   4 add
   3 jmp
   2 ret
   1 cmove


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_heap_3 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5512584

Instructions in generated .s: 378
Instructions by type in your generated assembly before linking is:
 184 mov
  24 cmp
  22 test
  19 push
  15 sub
  15 jne
  14 je
  14 call
  13 add
  12 lea
  10 jle
   8 sar
   7 pop
   6 jl
   5 jmp
   4 jo
   3 ret
   1 xor
   1 or
   1 cmove


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_heap_ex1 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5375152

Instructions in generated .s: 621
Instructions by type in your generated assembly before linking is:
 294 mov
  46 cmp
  34 test
  29 sub
  26 je
  25 push
  23 call
  22 jne
  21 lea
  21 add
  18 jle
  13 sar
  11 pop
  11 jmp
  11 jl
   7 ret
   4 jo
   3 cmove
   1 xor
   1 or


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_heap_ex2 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5501243

Instructions in generated .s: 621
Instructions by type in your generated assembly before linking is:
 294 mov
  46 cmp
  34 test
  29 sub
  26 je
  25 push
  23 call
  22 jne
  21 lea
  21 add
  18 jle
  13 sar
  11 pop
  11 jmp
  11 jl
   7 ret
   4 jo
   3 cmove
   1 xor
   1 or


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_heap_ex3 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5408500

Instructions in generated .s: 621
Instructions by type in your generated assembly before linking is:
 294 mov
  46 cmp
  34 test
  29 sub
  26 je
  25 push
  23 call
  22 jne
  21 lea
  21 add
  18 jle
  13 sar
  11 pop
  11 jmp
  11 jl
   7 ret
   4 jo
   3 cmove
   1 xor
   1 or


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_input_compare_1 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5410923

Instructions in generated .s: 47
Instructions by type in your generated assembly before linking is:
  21 mov
   5 push
   5 pop
   4 call
   3 jmp
   2 cmp
   1 test
   1 sub
   1 ret
   1 jne
   1 je
   1 cmovg
   1 add


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_if_expr stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5393983

Instructions in generated .s: 36
Instructions by type in your generated assembly before linking is:
  11 mov
   7 jo
   5 push
   5 pop
   4 call
   1 sub
   1 ret
   1 jmp
   1 add


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_input_compare_2 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5387248

Instructions in generated .s: 47
Instructions by type in your generated assembly before linking is:
  21 mov
   5 push
   5 pop
   4 call
   3 jmp
   2 cmp
   1 test
   1 sub
   1 ret
   1 jne
   1 je
   1 cmovg
   1 add


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_isbool_1 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5403924

Instructions in generated .s: 33
Instructions by type in your generated assembly before linking is:
  13 mov
   5 push
   5 pop
   4 call
   1 sub
   1 ret
   1 cmp
   1 cmove
   1 and
   1 add


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_isbool_2 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5371429

Instructions in generated .s: 33
Instructions by type in your generated assembly before linking is:
  13 mov
   5 push
   5 pop
   4 call
   1 sub
   1 ret
   1 cmp
   1 cmove
   1 and
   1 add


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_isnum_1 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5383114

Instructions in generated .s: 32
Instructions by type in your generated assembly before linking is:
  13 mov
   5 push
   5 pop
   4 call
   1 sub
   1 ret
   1 cmove
   1 and
   1 add


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_isnum_2 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5401429

Instructions in generated .s: 32
Instructions by type in your generated assembly before linking is:
  13 mov
   5 push
   5 pop
   4 call
   1 sub
   1 ret
   1 cmove
   1 and
   1 add


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_leq_1 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5427754

Instructions in generated .s: 60
Instructions by type in your generated assembly before linking is:
  25 mov
   8 push
   6 pop
   5 call
   3 jmp
   3 add
   2 sub
   2 ret
   2 cmp
   1 test
   1 jne
   1 je
   1 cmovle


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_leq_2 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5513990

Instructions in generated .s: 60
Instructions by type in your generated assembly before linking is:
  25 mov
   8 push
   6 pop
   5 call
   3 jmp
   3 add
   2 sub
   2 ret
   2 cmp
   1 test
   1 jne
   1 je
   1 cmovle


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_linked_list_manipulations stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5643907

Instructions in generated .s: 417
Instructions by type in your generated assembly before linking is:
 193 mov
  30 cmp
  25 push
  21 test
  20 je
  17 sub
  17 call
  14 jmp
  14 add
  12 lea
  11 jne
  10 jle
   9 pop
   6 sar
   6 jl
   5 ret
   4 cmove
   1 xor
   1 or
   1 jo


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_make_vec_succ stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5564842

Instructions in generated .s: 54
Instructions by type in your generated assembly before linking is:
  22 mov
   5 push
   5 pop
   5 call
   4 lea
   2 sar
   2 cmp
   2 add
   1 test
   1 sub
   1 ret
   1 rep
   1 jne
   1 jle
   1 jl


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_many_binding stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5416171

Instructions in generated .s: 29
Instructions by type in your generated assembly before linking is:
  11 mov
   5 push
   5 pop
   4 call
   1 sub
   1 ret
   1 jo
   1 add


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_many_binding2 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5411743

Instructions in generated .s: 81
Instructions by type in your generated assembly before linking is:
  42 mov
   7 test
   7 jne
   5 push
   5 pop
   4 jo
   4 call
   3 sub
   3 add
   1 ret


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_many_calls_1 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5385157

Instructions in generated .s: 62
Instructions by type in your generated assembly before linking is:
  24 mov
  12 push
   7 call
   6 pop
   6 add
   2 sub
   2 ret
   1 test
   1 jo
   1 jne


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_many_calls_2 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5410330

Instructions in generated .s: 130
Instructions by type in your generated assembly before linking is:
  55 mov
  19 push
  11 add
  10 call
   7 test
   7 pop
   7 jne
   4 jo
   3 sub
   3 ret
   2 sar
   2 imul


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_many_calls_3 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5422934

Instructions in generated .s: 150
Instructions by type in your generated assembly before linking is:
  65 mov
  17 push
  17 add
  11 call
   9 pop
   8 test
   8 jne
   5 sub
   5 ret
   5 jo


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_nested_arith stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5455335

Instructions in generated .s: 30
Instructions by type in your generated assembly before linking is:
  11 mov
   5 push
   5 pop
   4 call
   2 jo
   1 sub
   1 ret
   1 add


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_nested_arith2 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5420312

Instructions in generated .s: 32
Instructions by type in your generated assembly before linking is:
  11 mov
   5 push
   5 pop
   4 jo
   4 call
   1 sub
   1 ret
   1 add


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_nested_arith3 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5467413

Instructions in generated .s: 35
Instructions by type in your generated assembly before linking is:
  11 mov
   7 jo
   5 push
   5 pop
   4 call
   1 sub
   1 ret
   1 add


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_nested_binding stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5450878

Instructions in generated .s: 30
Instructions by type in your generated assembly before linking is:
  11 mov
   5 push
   5 pop
   4 call
   2 jo
   1 sub
   1 ret
   1 add


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_nested_lets stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5410582

Instructions in generated .s: 32
Instructions by type in your generated assembly before linking is:
  11 mov
   5 push
   5 pop
   4 jo
   4 call
   1 sub
   1 ret
   1 add


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_nested_prints stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5453647

Instructions in generated .s: 76
Instructions by type in your generated assembly before linking is:
  39 mov
   8 call
   5 push
   5 pop
   4 test
   4 jo
   4 jne
   3 add
   1 sub
   1 sar
   1 ret
   1 imul


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_nested_reused_binding stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5432067

Instructions in generated .s: 61
Instructions by type in your generated assembly before linking is:
  30 mov
   5 push
   5 pop
   4 test
   4 jne
   4 call
   4 add
   3 jo
   1 sub
   1 ret


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_points_2 stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5555606

Instructions in generated .s: 207
Instructions by type in your generated assembly before linking is:
  92 mov
  14 cmp
  13 push
  12 test
  11 sub
   9 call
   8 jne
   8 je
   8 add
   7 pop
   6 lea
   6 jle
   4 sar
   4 jl
   3 ret
   2 jo


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_print_funcs stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5429170

Instructions in generated .s: 140
Instructions by type in your generated assembly before linking is:
  63 mov
  19 push
  12 call
  11 add
   7 test
   7 pop
   7 jne
   4 jo
   3 sub
   3 ret
   2 sar
   2 imul


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_range_forced_gc stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5568245

Instructions in generated .s: 133
Instructions by type in your generated assembly before linking is:
  70 mov
  12 push
   9 call
   6 pop
   6 lea
   6 add
   4 cmp
   3 test
   3 jmp
   2 sub
   2 ret
   2 jne
   2 jle
   2 je
   1 xor
   1 or
   1 jo
   1 cmove


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_shadow_binding stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5415070

Instructions in generated .s: 30
Instructions by type in your generated assembly before linking is:
  11 mov
   5 push
   5 pop
   4 call
   2 jo
   1 sub
   1 ret
   1 add


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_vec_get_succ stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5375010

Instructions in generated .s: 74
Instructions by type in your generated assembly before linking is:
  35 mov
   5 push
   5 pop
   5 call
   4 cmp
   3 test
   3 sub
   3 lea
   2 sar
   2 jne
   2 jle
   2 je
   1 ret
   1 jl
   1 add


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00


---- profile_vec_succ stdout ----
valgrind is only available on Linux. Using usr/bin/time to gauge instructions instead (use it only for relative comparisons on your system)
Instructions executed: 5502440

Instructions in generated .s: 49
Instructions by type in your generated assembly before linking is:
  26 mov
   5 push
   5 pop
   5 call
   3 lea
   1 sub
   1 ret
   1 jle
   1 cmp
   1 add


perf is only available on Linux. Using usr/bin/time instead.
Time taken in ms (seconds on MacOS):
1 0.00
2 0.00
3 0.00
4 0.00
5 0.00